-- USE ROLE ACCOUNTADMIN;
-- GRANT CREATE INTEGRATION ON ACCOUNT TO SYSADMIN;
-- USE ROLE SYSADMIN;

-- -- storage integration
-- CREATE OR REPLACE STORAGE INTEGRATION S3_INTEGRATION
--   TYPE = EXTERNAL_STAGE
--   STORAGE_PROVIDER = 'S3'
--   STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::556071099444:user/snow_pipe'
--   ENABLED = TRUE
--   STORAGE_ALLOWED_LOCATIONS = ('s3://snow-pipe-loading/snow-pipe-data/');

--   CREATE OR REPLACE STORAGE INTEGRATION S3_INTEGRATION
--   TYPE = EXTERNAL_STAGE
--   STORAGE_PROVIDER = 'S3'
--   ENABLED = TRUE
--   STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::556071099444:role/snowflake_s3_role'
--   STORAGE_ALLOWED_LOCATIONS = ('s3://snow-pipe-loading/snow-pipe-data/');


--   -- arn:aws:s3:::snow-pipe-loading

-- -- giving privileges
-- USE ROLE ACCOUNTADMIN;
-- GRANT USAGE ON INTEGRATION S3_INTEGRATION TO ROLE SYSADMIN;
-- USE ROLE SYSADMIN;

-- -- valdating integration
-- DESC INTEGRATION S3_INTEGRATION;

-- -- Grant SYSADMIN usage and create privileges on the database and schema
-- USE ROLE ACCOUNTADMIN;
-- GRANT USAGE ON DATABASE PROJECT_DB TO ROLE SYSADMIN;
-- GRANT USAGE ON SCHEMA PROJECT_DB.PUBLIC TO ROLE SYSADMIN;
-- GRANT CREATE STAGE ON SCHEMA PROJECT_DB.PUBLIC TO ROLE SYSADMIN;

-- -- Switch back to SYSADMIN
-- USE ROLE SYSADMIN;


-- -- creating stage
-- CREATE OR REPLACE STAGE S3_INTEGRATEION_BULK_COPY_TESLA_STOCKS
--   STORAGE_INTEGRATION = S3_INTEGRATION
--   URL = 's3://snow-pipe-loading/snow-pipe-data/TSLA.csv'
--   FILE_FORMAT = (TYPE = 'CSV', FIELD_DELIMITER=',', SKIP_HEADER=1);

-- -- validating integration
-- LIST @S3_INTEGRATEION_BULK_COPY_TESLA_STOCKS;

-- -- Need to give the snowflake ARN & ID

-- -- Making sure the table is empty
-- TRUNCATE TABLE TESLA_STOCKS;
-- SELECT * FROM TESLA_STOCKS;

-- -- Copy data using integration
-- COPY INTO TESLA_STOCKS FROM @S3_INTEGRATEION_BULK_COPY_TESLA_STOCKS;

-- -- data should be there
-- SELECT * FROM TESLA_STOCKS;
